{"version":3,"sources":["pages/Todolist/bg.png","components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","pages/BaiTapToDoListSaga/bg.png","components/GlobalSetting/LoadingComponent/LoadingComponent.js","components/Home/Header/Header.js","HOC/Modal/Modal.js","pages/About/About.js","pages/BaiTapToDoListSaga/BaiTapToDoListSaga.js","redux/constants/ToDoListConst.js","pages/Contact/Contact.js","HOC/Modal/SlideDown.js","pages/Login/Login.js","pages/Register/Register.js","pages/DemoHOCModal/DemoHOCModal.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/Todolist/Todolist.js","redux/actions/ToDoListAction.js","pages/Todolist/ToDoListRedux.js","pages/Todolist/TodolistRFC.js","templates/HomeTemplate/HomeTemplate.js","App.js","serviceWorker.js","redux/reducers/ToDoListReducer.js","redux/reducers/LoadingReducer.js","redux/reducers/ModalReducer.js","util/constants/settingSystem.js","services/ToDoListService.js","redux/sagas/ToDoListSaga.js","redux/constants/LoadingConst.js","redux/sagas/rootSaga.js","redux/configStore.js","index.js"],"names":["module","exports","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","src","require","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","activeStyle","fontWeight","href","aria-haspopup","aria-labelledby","placeholder","Modal","props","Component","ModalReducer","tabIndex","role","aria-hidden","data-dismiss","About","BaiTapToDoListSaga","dispatch","useDispatch","taskList","ToDoListReducer","useState","values","taskName","errors","setState","addTask","e","preventDefault","useEffect","delTask","console","log","onClick","onSubmit","name","onChange","target","value","newValues","newErrors","test","trim","filter","item","status","map","index","key","Contact","SlideDown","propsSpring","useSpring","marginTop","from","config","duration","div","style","Login","userName","passWord","userLogin","setUserLogin","handleChange","event","newUserLogin","valid","history","goBack","localStorage","setItem","JSON","stringify","alert","when","message","location","Register","htmlFor","selected","DemoHOCModal","LoginWithSlideDown","Detail","match","params","path","Home","PageNotFound","url","Profile","getItem","Todolist","getTaskList","promise","Axios","method","then","result","data","catch","err","response","renderTaskToDo","checkTask","renderTaskToDoDone","rejectTask","res","this","getTaskListApi","a","ToDoListRedux","rejectTaskApi","checkTaskApi","deleteTaskApi","TodolistRFC","HomeTemplate","restParam","render","propsRoute","App","exact","component","Boolean","window","hostname","initialState","stateDefault","DOMAIN","STATUS_CODE","toDoListService","getTaskApi","addTaskApi","checkDoneTask","getTaskApiAction","theoDoiActionGetTaskApi","addTaskApiAction","theoDoiActionAddTaskApi","theoDoiActionDeleteTask","checkDoneTaskApi","theoDoiDoneTask","theoDoiRejectTask","action","put","call","delay","takeLatest","rootSaga","all","ToDoListSaga","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ddbf91c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__3w10_\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","import React from 'react'\r\nimport styleLoading from './LoadingComponent.module.css';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function LoadingComponent() {\r\n\r\n    const { isLoading } = useSelector(state => state.LoadingReducer)\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styleLoading.bgLoading}>\r\n                <img src={require('../../../assets/imgLoading/loading.gif')} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Header.css'\r\nexport default function Header() {\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\r\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\r\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/demohocmodal\">Demo HOC </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistredux\">To do list redux</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistsaga\">To do list saga</NavLink>\r\n\r\n                            \r\n                        </div>\r\n                    </li>\r\n\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n\r\nexport default function Modal(props) {\r\n\r\n    let Component =  useSelector(state => state.ModalReducer.Component);\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"modelId\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Modal title</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {Component}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    )\r\n}\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, REJECT_TASK_API } from '../../redux/constants/ToDoListConst';\r\n\r\n\r\nexport default function BaiTapToDoListSaga(props) {\r\n\r\n    const dispatch = useDispatch(); \r\n    const {taskList} = useSelector(state => state.ToDoListReducer)\r\n\r\n\r\n    let [state, setState] = useState({\r\n        taskList: [],\r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        let newValues = { ...state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n\r\n    const getTaskList = () => {\r\n        //Dispatch action saga\r\n        dispatch({\r\n            type:GET_TASKLIST_API,\r\n           \r\n        })\r\n    }\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:ADD_TASK_API,\r\n            taskName: state.values.taskName\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Gọi hàm getTaskList\r\n        getTaskList();\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //Xử lý reject task\r\n    const rejectTask = (taskName)=>{\r\n        dispatch({\r\n            type:REJECT_TASK_API,\r\n            taskName\r\n        })\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n   const  checkTask = (taskName) => {\r\n      dispatch({\r\n          type:CHECK_TASK_API,\r\n          taskName\r\n      })\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    const delTask = (taskName) => {\r\n        console.log(taskName)\r\n        dispatch({\r\n            type:DELETE_TASK_API,\r\n            taskName:taskName\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDo = () => {\r\n        return taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDoDone = () => {\r\n        return taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <button className=\"btn btn-success\" onClick={()=>{\r\n                dispatch({\r\n                    type:'getTaskApiAction'\r\n                })\r\n            }}>Dispatch action saga getTaskAPI</button>\r\n            <div className=\"card__header\">\r\n                <img src={require('./bg.png')} />\r\n            </div>\r\n            {/* <h2>hello!</h2> */}\r\n            <form className=\"card__body\" onSubmit={addTask}>\r\n                <div className=\"card__content\">\r\n                    <div className=\"card__title\">\r\n                        <h2>My Tasks</h2>\r\n                        <p>September 9,2020</p>\r\n                    </div>\r\n                    <div className=\"card__add\">\r\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\r\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"card__todo\">\r\n                        {/* Uncompleted tasks */}\r\n                        <ul className=\"todo\" id=\"todo\">\r\n                            {renderTaskToDo()}\r\n                        </ul>\r\n                        {/* Completed tasks */}\r\n                        <ul className=\"todo\" id=\"completed\">\r\n                            {renderTaskToDoDone()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","//-----------action----------\r\nexport const GET_TASK_API = 'GET_TASK_API';\r\n\r\n//---------------saga--------------\r\n\r\nexport const GET_TASKLIST_API = 'GET_TASKLIST_API';\r\nexport const ADD_TASK_API = 'ADD_TASK_API';\r\nexport const CHECK_TASK_API = 'CHECK_TASK_API';\r\nexport const DELETE_TASK_API = 'DELETE_TASK_API';\r\nexport const REJECT_TASK_API = 'REJECT_TASK_API';\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div>\r\n            liên hệ\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\n\r\nexport default function SlideDown(Component) {\r\n\r\n    const propsSpring = useSpring({\r\n        to: {\r\n            marginTop: '0'\r\n        }, from: {\r\n            marginTop: '-100px'\r\n\r\n        },config: {\r\n            duration:500\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <animated.div style={propsSpring}>\r\n                <Component />\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Prompt } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\r\n\r\n\r\n    console.log(userLogin)\r\n    const handleChange = (event) => {\r\n        const {name,value} = event.target;\r\n\r\n        const newUserLogin = {\r\n            ...userLogin,\r\n            [name]:value\r\n        };\r\n\r\n\r\n        let valid = true;\r\n        for(let key in newUserLogin) {\r\n            if(key !== 'status') {\r\n                if(newUserLogin[key].trim()===''){\r\n                    valid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!valid) {\r\n            newUserLogin.status = true;\r\n        }else {\r\n            newUserLogin.status = false;\r\n        }\r\n\r\n        setUserLogin(newUserLogin);\r\n    }\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\r\n            //Thành công thì chuyển về trang trước đó\r\n            // props.history.goBack();\r\n            //Chuyển đến trang chỉ định sau khi xử lý\r\n            // Chuyển hướng đến path tương ứng\r\n            //  props.history.push('/home');\r\n            //replace thay đổi nội dung path tương ứng\r\n            // props.history.replace('/home');\r\n            props.history.goBack();\r\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\r\n\r\n        }else {\r\n            alert('Login fail !')\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleLogin}>\r\n            <h3 className=\"display-4\">Login</h3>\r\n            <div className=\"form-group\">\r\n                <p>User Name</p>\r\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Password</p>\r\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <button className=\"btn btn-success\">Đăng nhập</button>\r\n            </div>\r\n            <Prompt when={userLogin.status} message={(location) => {\r\n                return 'Bạn có chắc muốn rời khỏi trang này !'\r\n            }} />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Register() {\r\n    return (\r\n        <form>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"inputEmail4\">Email</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"inputPassword4\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"inputAddress\">Address</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"inputAddress2\">Address 2</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"inputCity\">City</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                    <label htmlFor=\"inputState\">State</label>\r\n                    <select id=\"inputState\" className=\"form-control\">\r\n                        <option selected>Choose...</option>\r\n                        <option>...</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group col-md-2\">\r\n                    <label htmlFor=\"inputZip\">Zip</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck\">\r\n                        Check me out\r\n      </label>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport SlideDown from '../../HOC/Modal/SlideDown';\r\nimport Login from '../Login/Login';\r\nimport Register from '../Register/Register';\r\n\r\n\r\n\r\n\r\nexport default function DemoHOCModal() {\r\n    const LoginWithSlideDown = () =>  new SlideDown(Login);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            {/* Button trigger modal */}\r\n            <button onClick={() => {\r\n                dispatch({\r\n                    type:'OPEN_FORM',\r\n                    Component: <Login />\r\n                })\r\n\r\n\r\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\r\n                Đăng nhập\r\n            </button>\r\n\r\n            <button onClick={() => {\r\n                dispatch({\r\n                    type:'OPEN_FORM',\r\n                    Component:<Register />\r\n                })\r\n\r\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\r\n                Đăng ký\r\n            </button>\r\n\r\n            <LoginWithSlideDown />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Detail(props) {\r\n\r\n    return (\r\n        <div>\r\n            Giá trị tham số: {props.match.params.id}\r\n            <br />\r\n            Path name hiện tại: {props.match.path}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Home(props) {\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            trang chủ\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function PageNotFound(props) {\r\n    return (\r\n        <div>\r\n            Không tìm thấy trang {props.match.url}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Profile(props) {\r\n\r\n\r\n    if (localStorage.getItem('userLogin')) {\r\n        return (\r\n            <div>\r\n                profile\r\n            </div>\r\n        )\r\n    }else {\r\n        alert('Vui lòng đăng nhập để vào trang này !');\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport style from './Todolist.css'\r\n\r\nexport default class Todolist extends Component {\r\n\r\n    state = {\r\n        taskList: [],\r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    }\r\n\r\n    getTaskList = () => {\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n            method: 'GET'\r\n        });\r\n\r\n        promise.then((result) => {\r\n            console.log(result.data);\r\n            //Nếu gọi api lấy về kết quả thành công \r\n            //=> set lại state của component\r\n            this.setState({\r\n                taskList: result.data\r\n            })\r\n\r\n            console.log('thành công')\r\n        });\r\n\r\n\r\n        promise.catch((err) => {\r\n            console.log('thất bại')\r\n\r\n            console.log(err.response.data)\r\n        });\r\n    }\r\n\r\n    renderTaskToDo = () => {\r\n        return this.state.taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        this.delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={()=>{\r\n                        this.checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n    \r\n    renderTaskToDoDone = () => {\r\n        return this.state.taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        this.delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button  type=\"button\" className=\"complete\" onClick={()=>{\r\n                        this.rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n    //Xử lý reject task\r\n    rejectTask = (taskName)=>{\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n        \r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n    checkTask = (taskName) => {\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n\r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    delTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        promise.then(result => {\r\n            alert(result.data);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n        })\r\n    }\r\n\r\n\r\n    //Hàm sẽ tự động thực thi sau khi nội dung component được render\r\n    componentDidMount() {\r\n        this.getTaskList();\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        console.log(value, name);\r\n        let newValues = { ...this.state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...this.state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n    addTask = (e) => {\r\n        e.preventDefault(); //Dừng sự kiện submit form\r\n        console.log(this.state.values.taskName);\r\n\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n            method: 'POST',\r\n            data: { taskName: this.state.values.taskName }\r\n        });\r\n\r\n        //Xử lý thành công\r\n        promise.then(result => {\r\n            // alert(result.data);\r\n            this.getTaskList();\r\n\r\n        })\r\n\r\n        //Xử lý thất bại\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.addTask}>\r\n                {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\r\n                <div className=\"card\">\r\n                    <div className=\"card__header\">\r\n                        <img src={require('./bg.png')} />\r\n                    </div>\r\n                    {/* <h2>hello!</h2> */}\r\n                    <div className=\"card__body\">\r\n                        <div className=\"card__content\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"card__title\">\r\n                                    <h2>My Tasks</h2>\r\n                                    <p>September 9,2020</p>\r\n                                </div>\r\n                                <div className=\"card__add\">\r\n                                    <input name=\"taskName\" onChange={this.handleChange} id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\r\n\r\n                                    <button id=\"addItem\" onClick={this.addTask}>\r\n                                        <i className=\"fa fa-plus\" />\r\n                                    </button>\r\n                                </div>\r\n                                <span className=\"text text-danger\">{this.state.errors.taskName}</span>\r\n                            </div>\r\n\r\n                            <div className=\"card__todo form-group\">\r\n                                {/* Uncompleted tasks */}\r\n                                <ul className=\"todo\" id=\"todo\">\r\n                                    {this.renderTaskToDo()}\r\n                                </ul>\r\n                                {/* Completed tasks */}\r\n                                <ul className=\"todo\" id=\"completed\">\r\n                                    {this.renderTaskToDoDone()}\r\n\r\n                                    {/* <li>\r\n                                    <span>Ăn sáng</span>\r\n                                    <div className=\"buttons\">\r\n                                        <button className=\"remove\">\r\n                                            <i className=\"fa fa-trash-alt\" />\r\n                                        </button>\r\n                                        <button className=\"complete\">\r\n                                            <i className=\"far fa-check-circle\" />\r\n                                            <i className=\"fas fa-check-circle\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </li> */}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import Axios from \"axios\";\r\nimport Profile from \"../../pages/Profile/Profile\";\r\nimport { GET_TASK_API } from \"../constants/ToDoListConst\";\r\n\r\n\r\n//Action có 2 loại\r\n//Action thực thi ngay làm thay đổi reducer (action 1)\r\n//Action phải thực hiện xử lý rồi mới gọi action 1 thực thi (async action)\r\n\r\nexport const getTaskListApi = () => {\r\n\r\n    //Tiền xử lý dữ liệu => xử lý function \r\n    return async dispatch => {\r\n\r\n        try {\r\n            let { data, status, ...res } = await Axios({\r\n                url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n                method: 'GET'\r\n            });\r\n            if (status === 200) {\r\n                dispatch({\r\n                    type: GET_TASK_API,\r\n                    taskList: data\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data)\r\n        }\r\n\r\n        // console.log('promise',res.data)\r\n        // promise.then((result) => {\r\n        //     console.log(result.data);\r\n        //     //Nếu gọi api lấy về kết quả thành công \r\n        //     //=> set lại state của component\r\n        //     dispatch({\r\n        //         type: GET_TASK_API,\r\n        //         taskList: result.data\r\n        //     })\r\n\r\n        //     console.log('thành công')\r\n        // });\r\n\r\n\r\n        // promise.catch((err) => {\r\n        //     console.log('thất bại')\r\n        //     console.log(err.response.data)\r\n        // });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addTaskApi = (taskName) => {\r\n    return async dispatch => {\r\n\r\n        try {\r\n            //Xử lý trước khi dispatch\r\n            let {status,data} = await Axios({\r\n                url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n                method: 'POST',\r\n                data: { taskName: taskName }\r\n            });\r\n            // console.log('res',res)\r\n            if (status === 200) {\r\n                dispatch(getTaskListApi())\r\n            }\r\n        }catch(err){\r\n            console.log(err.response.data);\r\n        }\r\n        // //Xử lý thành công\r\n        // promise.then(result => {\r\n        //     // alert(result.data);\r\n        //     dispatch(getTaskListApi());\r\n\r\n        // })\r\n\r\n        // //Xử lý thất bại\r\n        // promise.catch(errors => {\r\n        //     alert(errors.response.data)\r\n\r\n        // })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deleteTaskApi = (taskName) => {\r\n    return dispatch => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        promise.then(result => {\r\n            //Sau khi thực hiện api gọi phương thức dispatchAction get TaskListApi để load lại task\r\n            dispatch(getTaskListApi())\r\n        });\r\n\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkTaskApi = (taskName) => {\r\n    return dispatch => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method: 'PUT'\r\n        });\r\n\r\n        promise.then(res => {\r\n            dispatch(getTaskListApi())\r\n        });\r\n\r\n        promise.catch(err => {\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const rejectTaskApi = (taskName) => {\r\n    return dispatch => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method: 'PUT'\r\n        });\r\n\r\n        promise.then(res => {\r\n            alert(res.data);\r\n            dispatch(getTaskListApi());\r\n        });\r\n\r\n        promise.catch(err => {\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { addTaskApi, deleteTaskApi, getTaskListApi,checkTaskApi, rejectTaskApi } from '../../redux/actions/ToDoListAction';\r\nimport { GET_TASK_API } from '../../redux/constants/ToDoListConst';\r\n\r\n\r\nexport default function ToDoListRedux(props) {\r\n    \r\n    //Lấy tasklist từ redux về\r\n    const {taskList} = useSelector(state => state.ToDoListReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    let [state, setState] = useState({\r\n     \r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        let newValues = { ...state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n\r\n    const getTaskList = () => {\r\n       dispatch(getTaskListApi())\r\n    }\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault(); //Dừng sự kiện submit form\r\n        console.log(state.values.taskName);\r\n\r\n        //Xử lý nhận dữ liệu từ người dùng nhập => gọi action addTaskApi()\r\n        dispatch(addTaskApi(state.values.taskName))\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        getTaskList();\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //Xử lý reject task\r\n    const rejectTask = (taskName)=>{\r\n        dispatch(rejectTaskApi(taskName));\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n   const checkTask = (taskName) => {\r\n        dispatch(checkTaskApi(taskName))\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    const delTask = (taskName) => {\r\n        dispatch(deleteTaskApi(taskName))\r\n    }\r\n\r\n\r\n    const renderTaskToDo = () => {\r\n        return taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDoDone = () => {\r\n        return taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__header\">\r\n                <img src={require('./bg.png')} />\r\n            </div>\r\n            {/* <h2>hello!</h2> */}\r\n            <form className=\"card__body\" onSubmit={addTask}>\r\n                <div className=\"card__content\">\r\n                    <div className=\"card__title\">\r\n                        <h2>My Tasks</h2>\r\n                        <p>September 9,2020</p>\r\n                    </div>\r\n                    <div className=\"card__add\">\r\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\r\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"card__todo\">\r\n                        {/* Uncompleted tasks */}\r\n                        <ul className=\"todo\" id=\"todo\">\r\n                            {renderTaskToDo()}\r\n                        </ul>\r\n                        {/* Completed tasks */}\r\n                        <ul className=\"todo\" id=\"completed\">\r\n                            {renderTaskToDoDone()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function TodolistRFC(props) {\r\n\r\n    let [state, setState] = useState({\r\n        taskList: [],\r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        let newValues = { ...state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n\r\n    const getTaskList = () => {\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n            method: 'GET'\r\n        });\r\n\r\n        promise.then((result) => {\r\n            console.log(result.data);\r\n            //Nếu gọi api lấy về kết quả thành công \r\n            //=> set lại state của component\r\n            setState({\r\n                ...state,\r\n                taskList: result.data\r\n            })\r\n\r\n            console.log('thành công')\r\n        });\r\n\r\n\r\n        promise.catch((err) => {\r\n            console.log('thất bại')\r\n\r\n            console.log(err.response.data)\r\n        });\r\n    }\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault(); //Dừng sự kiện submit form\r\n        console.log(state.values.taskName);\r\n\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n            method: 'POST',\r\n            data: { taskName: state.values.taskName }\r\n        });\r\n\r\n        //Xử lý thành công\r\n        promise.then(result => {\r\n            // alert(result.data);\r\n            getTaskList();\r\n\r\n        })\r\n\r\n        //Xử lý thất bại\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTaskList();\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //Xử lý reject task\r\n    const rejectTask = (taskName)=>{\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n        \r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n   const  checkTask = (taskName) => {\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n\r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    const delTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        promise.then(result => {\r\n            alert(result.data);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDo = () => {\r\n        return state.taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDoDone = () => {\r\n        return state.taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__header\">\r\n                <img src={require('./bg.png')} />\r\n            </div>\r\n            {/* <h2>hello!</h2> */}\r\n            <form className=\"card__body\" onSubmit={addTask}>\r\n                <div className=\"card__content\">\r\n                    <div className=\"card__title\">\r\n                        <h2>My Tasks</h2>\r\n                        <p>September 9,2020</p>\r\n                    </div>\r\n                    <div className=\"card__add\">\r\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\r\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"card__todo\">\r\n                        {/* Uncompleted tasks */}\r\n                        <ul className=\"todo\" id=\"todo\">\r\n                            {renderTaskToDo()}\r\n                        </ul>\r\n                        {/* Completed tasks */}\r\n                        <ul className=\"todo\" id=\"completed\">\r\n                            {renderTaskToDoDone()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React,{Fragment} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from '../../components/Home/Header/Header';\r\n\r\n\r\n\r\n\r\nexport const HomeTemplate = (props) => {\r\n\r\n    const {Component,...restParam} = props;\r\n    return <Route {...restParam} render={(propsRoute)=>{\r\n        return <>\r\n            <Header />\r\n            <Component {...propsRoute} />\r\n        </>\r\n    }} />\r\n\r\n}","import React from 'react';\r\nimport { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\r\nimport LoadingComponent from './components/GlobalSetting/LoadingComponent/LoadingComponent';\r\nimport Header from './components/Home/Header/Header';\r\nimport Modal from './HOC/Modal/Modal';\r\nimport About from './pages/About/About';\r\nimport BaiTapToDoListSaga from './pages/BaiTapToDoListSaga/BaiTapToDoListSaga';\r\nimport Contact from './pages/Contact/Contact';\r\nimport DemoHOCModal from './pages/DemoHOCModal/DemoHOCModal';\r\nimport Detail from './pages/Detail/Detail';\r\nimport Home from './pages/Home/Home';\r\nimport Login from './pages/Login/Login';\r\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\r\nimport Profile from './pages/Profile/Profile';\r\nimport Todolist from './pages/Todolist/Todolist';\r\nimport ToDoListRedux from './pages/Todolist/ToDoListRedux';\r\nimport TodolistRFC from './pages/Todolist/TodolistRFC';\r\nimport { HomeTemplate } from './templates/HomeTemplate/HomeTemplate';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Modal />\r\n      <LoadingComponent />\r\n      <Switch>\r\n        \r\n        {/* <Route exact path='/home'  render={(propsRoute)=>{\r\n          return <div>\r\n                <Header />\r\n                <Home {...propsRoute} />\r\n          </div>\r\n        }}/> */}\r\n\r\n        <HomeTemplate path=\"/home\" exact Component={Home} />\r\n\r\n        <HomeTemplate exact path='/contact' Component={Contact}/>\r\n        <HomeTemplate exact path='/about' Component={About} />\r\n        <HomeTemplate exact path='/login' component={Login} />\r\n        <HomeTemplate exact path='/detail/:id' component={Detail} />\r\n        <HomeTemplate exact path='/profile' component={Profile} />\r\n        <HomeTemplate exact path='/todolistrfc' component={TodolistRFC} />\r\n        <HomeTemplate exact path='/todolistrcc' component={Todolist} />\r\n        <HomeTemplate exact path='/todolistredux' component={ToDoListRedux} />\r\n        <HomeTemplate exact path='/todolistsaga' component={BaiTapToDoListSaga} />\r\n        <HomeTemplate exact path='/demohocmodal' component={DemoHOCModal} />\r\n\r\n\r\n        <HomeTemplate exact path='/' component={Home} />\r\n        <HomeTemplate path=\"*\" component={PageNotFound}/>\r\n\r\n      </Switch>\r\n  \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { GET_TASK_API } from \"../constants/ToDoListConst\"\r\n\r\n\r\nconst initialState = {\r\n    taskList:[]\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_TASK_API:\r\n        state.taskList = action.taskList;\r\n        return { ...state }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\r\n\r\nconst initialState = {\r\n    isLoading:false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case DISPLAY_LOADING:\r\n        state.isLoading = true;\r\n        return { ...state }\r\n    case HIDE_LOADING:{\r\n        state.isLoading=false;\r\n        return {...state}\r\n    }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst stateDefault = {\r\n    Component: <p>Nội dung mặc định</p>\r\n}\r\n\r\n\r\nexport const ModalReducer = (state = stateDefault,action) => {\r\n    switch(action.type) {\r\n        case 'OPEN_FORM' : {\r\n            state.Component = action.Component;\r\n            return {...state}\r\n        }\r\n\r\n\r\n        default : return {...state}\r\n    }\r\n}","export const DOMAIN = 'http://svcy.myclass.vn/api';\r\n\r\n\r\n\r\nexport const STATUS_CODE = {\r\n    SUCCESS : 200,\r\n    NOT_FOUND: 404,\r\n    SERVER_ERROR:500\r\n}","import Axios from \"axios\";\r\nimport { DOMAIN } from \"../util/constants/settingSystem\"\r\n\r\nexport class ToDoListService {\r\n    constructor(){\r\n\r\n    }\r\n\r\n    getTaskApi = () => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/GetAllTask`,\r\n            method: 'GET'\r\n        })\r\n    }\r\n\r\n    addTaskApi = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/addTask`,\r\n            method: 'POST',\r\n            data: {\r\n                taskName:taskName\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteTaskApi = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE',\r\n        })\r\n    }\r\n\r\n    checkDoneTask = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/doneTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n    }\r\n\r\n    rejectTask = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const toDoListService = new ToDoListService();\r\n\r\n","import Axios from 'axios'\r\nimport { call, delay, fork, take, takeEvery, takeLatest, put } from 'redux-saga/effects'\r\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, GET_TASK_API, REJECT_TASK_API } from '../constants/ToDoListConst';\r\nimport { toDoListService } from '../../services/ToDoListService'\r\nimport { STATUS_CODE } from '../../util/constants/settingSystem';\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../constants/LoadingConst';\r\n/*redux 2 loại action: \r\n    Loại 1: action => object (action thường)\r\n    Loại 2: action => function (thường dùng để xử lý api hoặc gọi các action khác )\r\n*/\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng getTask\r\n    Action saga lấy danh sách task từ api \r\n*/\r\nfunction* getTaskApiAction(action) {\r\n    //put giống dispatch action\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    try {\r\n        let { data, status } = yield call(toDoListService.getTaskApi)\r\n        yield delay(300);\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            //Sau khi lấy giá trị thành công dùng put (giống dispatch bên thunk) \r\n            yield put({\r\n                type: GET_TASK_API,\r\n                taskList: data\r\n            });\r\n        } else {\r\n            console.log('error')\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.log('err')\r\n    }\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n\r\n}\r\n\r\nexport function* theoDoiActionGetTaskApi() {\r\n    yield takeLatest(GET_TASKLIST_API, getTaskApiAction)\r\n}\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng addTask\r\n    Action saga nghiệp vụ thêm task\r\n*/\r\n\r\nfunction* addTaskApiAction(action) {\r\n    const { taskName } = action;\r\n    //Gọi api\r\n    try {\r\n        const { data, status } = yield call(() => { return toDoListService.addTaskApi(taskName) });\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_TASKLIST_API\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    //Hiển thị loading\r\n    //thành công thì load lại task = cách gọi lại action saga load tasklist\r\n}\r\n\r\nexport function* theoDoiActionAddTaskApi() {\r\n    yield takeLatest(ADD_TASK_API, addTaskApiAction)\r\n}\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng deleteTask\r\n    Action saga nghiệp vụ xóa task\r\n*/\r\n\r\nfunction* deleteTaskApi(action) {\r\n    console.log(action)\r\n    const { taskName } = action;\r\n    try {\r\n        //Gọi api deletetask\r\n        const { data, status } = yield call(() => {\r\n            return toDoListService.deleteTaskApi(taskName);\r\n        });\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            //Nếu thành công thì gọi lại action GET_TASKLIST_API(action saga thực thi)\r\n            yield put({\r\n                type: GET_TASKLIST_API,\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiActionDeleteTask() {\r\n    yield takeLatest(DELETE_TASK_API, deleteTaskApi)\r\n}\r\n\r\n\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng deleteTask\r\n    Action saga thực hiện nghiệp vụ done task\r\n*/\r\n\r\nfunction* checkDoneTaskApi(action) {\r\n    const { taskName } = action;\r\n\r\n    try {\r\n        const { data, status } = yield call(() => {\r\n            return toDoListService.checkDoneTask(taskName);\r\n        });\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_TASKLIST_API\r\n            })\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiDoneTask() {\r\n    yield takeLatest(CHECK_TASK_API, checkDoneTaskApi)\r\n}\r\n\r\n\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng deleteTask\r\n    Action saga thực hiện nghiệp vụ reject task\r\n*/\r\nexport function* rejectTaskApi(action) {\r\n    const { taskName } = action;\r\n\r\n    try{\r\n        const {data,status} = yield call (()=>{\r\n            return toDoListService.rejectTask(taskName);\r\n        })\r\n        \r\n        if(status === STATUS_CODE.SUCCESS) {\r\n            yield put ({\r\n                type:GET_TASKLIST_API\r\n            })\r\n        }\r\n    }catch(err) {\r\n        console.log(err)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiRejectTask() {\r\n    yield takeLatest(REJECT_TASK_API, rejectTaskApi)\r\n}\r\n\r\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';","import { all } from \"redux-saga/effects\";\r\nimport Todolist from \"../../pages/Todolist/Todolist\";\r\nimport TodolistRFC from \"../../pages/Todolist/TodolistRFC\";\r\nimport * as ToDoListSaga from './ToDoListSaga'\r\n// import {theoDoiActionGetTaskApi} from './ToDoListSaga'\r\n\r\n\r\nexport function* rootSaga() {\r\n\r\n  yield all([\r\n    //Nghiệp vụ theo dõi các action saga todolist\r\n    ToDoListSaga.theoDoiActionGetTaskApi(),\r\n    ToDoListSaga.theoDoiActionAddTaskApi(),\r\n    ToDoListSaga.theoDoiActionDeleteTask(),\r\n    ToDoListSaga.theoDoiDoneTask(),\r\n    ToDoListSaga.theoDoiRejectTask()\r\n    //Nghiệp ...\r\n\r\n  ])\r\n\r\n\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport ToDoListReducer from './reducers/ToDoListReducer'\r\nimport LoadingReducer from './reducers/LoadingReducer';\r\nimport {ModalReducer} from './reducers/ModalReducer'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\n\r\n//middleware saga\r\nimport createMiddleWareSaga from 'redux-saga';\r\nimport { rootSaga } from './sagas/rootSaga';\r\nconst middleWareSaga = createMiddleWareSaga();\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    //reducer khai báo tại đây\r\n    ToDoListReducer,\r\n    LoadingReducer,\r\n    ModalReducer\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(reduxThunk,middleWareSaga));\r\n\r\n//Gọi saga\r\nmiddleWareSaga.run(rootSaga);\r\n\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//setup redux\r\nimport store from './redux/configStore'\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}